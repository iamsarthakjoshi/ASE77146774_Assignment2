<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="userstblBindingSource.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>